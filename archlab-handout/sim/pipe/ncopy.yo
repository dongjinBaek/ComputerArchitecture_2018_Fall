                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 2017-12735 Baek Dong Jin
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax, %rax
0x002: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x00c: 728401000000000000   | 	jl Has4_Small
                            | 
                            | 
0x015:                      | L1:
0x015: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x01f: 50970800000000000000 | 	mrmovq $8(%rdi), %r9 # read val from src
0x029: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
0x033: 40960800000000000000 | 	rmmovq %r9, $8(%rsi) # store it to dst
                            | 
0x03d: 62aa                 | 	andq %r10, %r10
0x03f: 715200000000000000   | 	jle L2 
0x048: c0f00100000000000000 | 	iaddq $1, %rax
0x052:                      | L2:
0x052: 6299                 | 	andq %r9, %r9
0x054: 716700000000000000   | 	jle L3
0x05d: c0f00100000000000000 | 	iaddq $1, %rax
0x067:                      | L3:
0x067: 50a71000000000000000 | 	mrmovq $16(%rdi), %r10 # read val from src
0x071: 50971800000000000000 | 	mrmovq $24(%rdi), %r9 # read val from src
0x07b: 40a61000000000000000 | 	rmmovq %r10, $16(%rsi) # store it to dst
0x085: 40961800000000000000 | 	rmmovq %r9, $24(%rsi) # store it to dst
                            | 
0x08f: 62aa                 | 	andq %r10, %r10
0x091: 71a400000000000000   | 	jle L4 
0x09a: c0f00100000000000000 | 	iaddq $1, %rax
0x0a4:                      | L4:
0x0a4: 6299                 | 	andq %r9, %r9
0x0a6: 71b900000000000000   | 	jle L5
0x0af: c0f00100000000000000 | 	iaddq $1, %rax
0x0b9:                      | L5:
0x0b9: 50a72000000000000000 | 	mrmovq $32(%rdi), %r10 # read val from src
0x0c3: 50972800000000000000 | 	mrmovq $40(%rdi), %r9 # read val from src
0x0cd: 40a62000000000000000 | 	rmmovq %r10, $32(%rsi) # store it to dst
0x0d7: 40962800000000000000 | 	rmmovq %r9, $40(%rsi) # store it to dst
                            | 
0x0e1: 62aa                 | 	andq %r10, %r10
0x0e3: 71f600000000000000   | 	jle L6 
0x0ec: c0f00100000000000000 | 	iaddq $1, %rax
0x0f6:                      | L6:
0x0f6: 6299                 | 	andq %r9, %r9
0x0f8: 710b01000000000000   | 	jle L7
0x101: c0f00100000000000000 | 	iaddq $1, %rax
0x10b:                      | L7:
0x10b: 50a73000000000000000 | 	mrmovq $48(%rdi), %r10 # read val from src
0x115: 50973800000000000000 | 	mrmovq $56(%rdi), %r9 # read val from src
0x11f: 40a63000000000000000 | 	rmmovq %r10, $48(%rsi) # store it to dst
0x129: 40963800000000000000 | 	rmmovq %r9, $56(%rsi) # store it to dst
                            | 
0x133: 62aa                 | 	andq %r10, %r10
0x135: 714801000000000000   | 	jle L8 
0x13e: c0f00100000000000000 | 	iaddq $1, %rax
0x148:                      | L8:
0x148: c0f74000000000000000 | 	iaddq $64, %rdi
0x152: c0f64000000000000000 | 	iaddq $64, %rsi
0x15c: 6299                 | 	andq %r9, %r9
0x15e: 717101000000000000   | 	jle Test 
0x167: c0f00100000000000000 | 	iaddq $1, %rax
0x171:                      | Test:
0x171: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx # (len-8) >= 0 ?
0x17b: 751500000000000000   | 	jge L1
                            | 
0x184:                      | Has4_Small:
0x184: c0f20800000000000000 | 	iaddq $8, %rdx
                            | 
0x18e:                      | Has4:
0x18e: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x198: 726202000000000000   | 	jl Has2_Small
                            | 
0x1a1: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x1ab: 50970800000000000000 | 	mrmovq $8(%rdi), %r9
0x1b5: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1bf: 40960800000000000000 | 	rmmovq %r9, $8(%rsi)
                            | 
0x1c9: 62aa                 | 	andq %r10, %r10
0x1cb: 71de01000000000000   | 	jle S1
0x1d4: c0f00100000000000000 | 	iaddq $1, %rax
0x1de:                      | S1:
0x1de: 6299                 | 	andq %r9, %r9
0x1e0: 71f301000000000000   | 	jle S2
0x1e9: c0f00100000000000000 | 	iaddq $1, %rax
0x1f3:                      | S2:
0x1f3: 50a71000000000000000 | 	mrmovq $16(%rdi), %r10
0x1fd: 50971800000000000000 | 	mrmovq $24(%rdi), %r9
0x207: 40a61000000000000000 | 	rmmovq %r10, $16(%rsi)
0x211: 40961800000000000000 | 	rmmovq %r9, $24(%rsi)
                            | 
0x21b: 62aa                 | 	andq %r10, %r10
0x21d: 713002000000000000   | 	jle S3
0x226: c0f00100000000000000 | 	iaddq $1, %rax
0x230:                      | S3:
0x230: c0f72000000000000000 | 	iaddq $32, %rdi
0x23a: c0f62000000000000000 | 	iaddq $32, %rsi
0x244: 6299                 | 	andq %r9, %r9
0x246: 716c02000000000000   | 	jle Has2
0x24f: c0f00100000000000000 | 	iaddq $1, %rax
0x259: 706c02000000000000   | 	jmp Has2
                            | 
0x262:                      | Has2_Small:
0x262: c0f20400000000000000 | 	iaddq $4, %rdx
0x26c:                      | Has2:
0x26c: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x276: 72ee02000000000000   | 	jl Has1_Small
                            | 
0x27f: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x289: 50970800000000000000 | 	mrmovq $8(%rdi), %r9 # read val from src
0x293: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
0x29d: 40960800000000000000 | 	rmmovq %r9, $8(%rsi) # store it to dst
                            | 
0x2a7: 62aa                 | 	andq %r10, %r10
0x2a9: 71bc02000000000000   | 	jle S4
0x2b2: c0f00100000000000000 | 	iaddq $1, %rax
0x2bc:                      | S4:
0x2bc: c0f71000000000000000 | 	iaddq $16, %rdi
0x2c6: c0f61000000000000000 | 	iaddq $16, %rsi
                            | 
0x2d0: 6299                 | 	andq %r9, %r9
0x2d2: 71f802000000000000   | 	jle Has1
0x2db: c0f00100000000000000 | 	iaddq $1, %rax
0x2e5: 70f802000000000000   | 	jmp Has1
                            | 	
0x2ee:                      | Has1_Small:
0x2ee: c0f20200000000000000 | 	iaddq $2, %rdx
                            | 
0x2f8:                      | Has1:
0x2f8: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x302: 723403000000000000   | 	jl Done
                            | 
0x30b: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x315: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
                            | 
0x31f: 62aa                 | 	andq %r10, %r10
0x321: 713403000000000000   | 	jle Done
0x32a: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | 
                            | 
                            | #################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x334:                      | Done:
0x334: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x335:                      | End:
                            | #/* $end ncopy-ys */
