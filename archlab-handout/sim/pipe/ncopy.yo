                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 2017-12735 Baek Dong Jin
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax, %rax # count = 0;
                            | 
0x002:                      | Mod2:
0x002: 30f90100000000000000 | 	irmovq $1, %r9
0x00c: 6229                 | 	andq %rdx, %r9 # len is Even ?
0x00e: 736700000000000000   | 	je Mod4
                            | 
0x017: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x021: c0f70800000000000000 | 	iaddq $8, %rdi
0x02b: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
0x035: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
0x03f: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x049: 62aa                 | 	andq %r10, %r10
0x04b: 716700000000000000   | 	jle Mod4
0x054: c0f00100000000000000 | 	iaddq $1, %rax
0x05e: 706700000000000000   | 	jmp Mod4
                            | 
0x067:                      | Mod4:
0x067: 30f90200000000000000 | 	irmovq $2, %r9
0x071: 6229                 | 	andq %rdx, %r9 # len is 0, 1 mod 4 ?
0x073: 73ad01000000000000   | 	je Test
                            | 
0x07c: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x086: c0f71000000000000000 | 	iaddq $16, %rdi
0x090: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
                            | 
0x09a: 62aa                 | 	andq %r10, %r10
0x09c: 71af00000000000000   | 	jle Mod4Second
0x0a5: c0f00100000000000000 | 	iaddq $1, %rax
0x0af:                      | Mod4Second:
0x0af: 50a7f8ffffffffffffff | 	mrmovq $-8(%rdi), %r10 # read val from src
0x0b9: c0f61000000000000000 | 	iaddq $16, %rsi
0x0c3: 40a6f8ffffffffffffff | 	rmmovq %r10, $-8(%rsi) # store it to dst
                            | 
0x0cd: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x0d7: 62aa                 | 	andq %r10, %r10
0x0d9: 71ad01000000000000   | 	jle Test
0x0e2: c0f00100000000000000 | 	iaddq $1, %rax
0x0ec: 70ad01000000000000   | 	jmp Test
                            | 
0x0f5:                      | L1:
0x0f5: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x0ff: c0f72000000000000000 | 	iaddq $32, %rdi
0x109: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
                            | 
0x113: 62aa                 | 	andq %r10, %r10	
0x115: 712801000000000000   | 	jle L2 
0x11e: c0f00100000000000000 | 	iaddq $1, %rax
0x128:                      | L2:
0x128: 50a7e8ffffffffffffff | 	mrmovq $-24(%rdi), %r10 # read val from src
0x132: c0f62000000000000000 | 	iaddq $32, %rsi
0x13c: 40a6e8ffffffffffffff | 	rmmovq %r10, $-24(%rsi) # store it to dst
                            | 
0x146: 62aa                 | 	andq %r10, %r10
0x148: 715b01000000000000   | 	jle L3
0x151: c0f00100000000000000 | 	iaddq $1, %rax
0x15b:                      | L3:
0x15b: 50a7f0ffffffffffffff | 	mrmovq $-16(%rdi), %r10 # read val from src
0x165: 40a6f0ffffffffffffff | 	rmmovq %r10, $-16(%rsi) # store it to dst
                            | 
0x16f: 62aa                 | 	andq %r10, %r10	
0x171: 718401000000000000   | 	jle L4 
0x17a: c0f00100000000000000 | 	iaddq $1, %rax
0x184:                      | L4:
0x184: 50a7f8ffffffffffffff | 	mrmovq $-8(%rdi), %r10 # read val from src
0x18e: 40a6f8ffffffffffffff | 	rmmovq %r10, $-8(%rsi) # store it to dst
                            | 
0x198: 62aa                 | 	andq %r10, %r10
0x19a: 71ad01000000000000   | 	jle Test
0x1a3: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1ad:                      | Test:
0x1ad: c0f2fcffffffffffffff | 	iaddq $-4, %rdx # (len-2) >= 0 ?
0x1b7: 75f500000000000000   | 	jge L1
                            | #################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1c0:                      | Done:
0x1c0: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1c1:                      | End:
                            | #/* $end ncopy-ys */
