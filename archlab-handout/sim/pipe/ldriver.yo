                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 2017-12735 Baek Dong Jin
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax, %rax # count = 0;
0x034: 30f90100000000000000 | 	irmovq $1, %r9
0x03e: 6229                 | 	andq %rdx, %r9 # len is Even ?
0x040: 73ff00000000000000   | 	je Test
                            | 
0x049:                      | Odd:
0x049: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x053: c0f70800000000000000 | 	iaddq $8, %rdi
0x05d: 40a60000000000000000 | 	rmmovq %r10, (%rsi) # store it to dst
0x067: c0f60800000000000000 | 	iaddq $8, %rsi
                            | 
0x071: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x07b: 62aa                 | 	andq %r10, %r10
0x07d: 71ff00000000000000   | 	jle Test
0x086: c0f00100000000000000 | 	iaddq $1, %rax
0x090: 70ff00000000000000   | 	jmp Test
0x099:                      | L1:
0x099: 50a70000000000000000 | 	mrmovq (%rdi), %r10 # read val from src
0x0a3: c0f61000000000000000 | 	iaddq $16, %rsi
0x0ad: 40a6f0ffffffffffffff | 	rmmovq %r10, $-16(%rsi) # store it to dst
                            | 
0x0b7: 62aa                 | 	andq %r10, %r10	
0x0b9: 71cc00000000000000   | 	jle L2 
0x0c2: c0f00100000000000000 | 	iaddq $1, %rax
0x0cc:                      | L2:
0x0cc: 50a70800000000000000 | 	mrmovq $8(%rdi), %r10 # read val from src
0x0d6: c0f71000000000000000 | 	iaddq $16, %rdi
0x0e0: 40a6f8ffffffffffffff | 	rmmovq %r10, $-8(%rsi) # store it to dst
                            | 
0x0ea: 62aa                 | 	andq %r10, %r10
0x0ec: 71ff00000000000000   | 	jle Test
0x0f5: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0ff:                      | Test:
0x0ff: c0f2feffffffffffffff | 	iaddq $-2, %rdx # (len-2) >= 0 ?
0x109: 759900000000000000   | 	jge L1
                            | #################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x112:                      | Done:
0x112: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x113:                      | End:
                            | #/* $end ncopy-ys */
0x113:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x118:                      | 	.align 8
0x118:                      | src:
0x118: ffffffffffffffff     | 	.quad -1
0x120: feffffffffffffff     | 	.quad -2
0x128: 0300000000000000     | 	.quad 3
0x130: 0400000000000000     | 	.quad 4
0x138: 0500000000000000     | 	.quad 5
0x140: 0600000000000000     | 	.quad 6
0x148: f9ffffffffffffff     | 	.quad -7
0x150: f8ffffffffffffff     | 	.quad -8
0x158: f7ffffffffffffff     | 	.quad -9
0x160: f6ffffffffffffff     | 	.quad -10
0x168: 0b00000000000000     | 	.quad 11
0x170: 0c00000000000000     | 	.quad 12
0x178: f3ffffffffffffff     | 	.quad -13
0x180: f2ffffffffffffff     | 	.quad -14
0x188: 0f00000000000000     | 	.quad 15
0x190: f0ffffffffffffff     | 	.quad -16
0x198: 1100000000000000     | 	.quad 17
0x1a0: eeffffffffffffff     | 	.quad -18
0x1a8: 1300000000000000     | 	.quad 19
0x1b0: ecffffffffffffff     | 	.quad -20
0x1b8: 1500000000000000     | 	.quad 21
0x1c0: 1600000000000000     | 	.quad 22
0x1c8: e9ffffffffffffff     | 	.quad -23
0x1d0: 1800000000000000     | 	.quad 24
0x1d8: e7ffffffffffffff     | 	.quad -25
0x1e0: e6ffffffffffffff     | 	.quad -26
0x1e8: 1b00000000000000     | 	.quad 27
0x1f0: 1c00000000000000     | 	.quad 28
0x1f8: e3ffffffffffffff     | 	.quad -29
0x200: 1e00000000000000     | 	.quad 30
0x208: e1ffffffffffffff     | 	.quad -31
0x210: 2000000000000000     | 	.quad 32
0x218: dfffffffffffffff     | 	.quad -33
0x220: deffffffffffffff     | 	.quad -34
0x228: ddffffffffffffff     | 	.quad -35
0x230: 2400000000000000     | 	.quad 36
0x238: dbffffffffffffff     | 	.quad -37
0x240: daffffffffffffff     | 	.quad -38
0x248: 2700000000000000     | 	.quad 39
0x250: 2800000000000000     | 	.quad 40
0x258: 2900000000000000     | 	.quad 41
0x260: d6ffffffffffffff     | 	.quad -42
0x268: 2b00000000000000     | 	.quad 43
0x270: d4ffffffffffffff     | 	.quad -44
0x278: d3ffffffffffffff     | 	.quad -45
0x280: d2ffffffffffffff     | 	.quad -46
0x288: d1ffffffffffffff     | 	.quad -47
0x290: d0ffffffffffffff     | 	.quad -48
0x298: 3100000000000000     | 	.quad 49
0x2a0: ceffffffffffffff     | 	.quad -50
0x2a8: cdffffffffffffff     | 	.quad -51
0x2b0: ccffffffffffffff     | 	.quad -52
0x2b8: 3500000000000000     | 	.quad 53
0x2c0: 3600000000000000     | 	.quad 54
0x2c8: 3700000000000000     | 	.quad 55
0x2d0: c8ffffffffffffff     | 	.quad -56
0x2d8: 3900000000000000     | 	.quad 57
0x2e0: 3a00000000000000     | 	.quad 58
0x2e8: 3b00000000000000     | 	.quad 59
0x2f0: 3c00000000000000     | 	.quad 60
0x2f8: c3ffffffffffffff     | 	.quad -61
0x300: 3e00000000000000     | 	.quad 62
0x308: 3f00000000000000     | 	.quad 63
0x310: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x320:                      | 	.align 16
0x320:                      | Predest:
0x320: fadebc0000000000     | 	.quad 0xbcdefa
0x328:                      | dest:
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520:                      | Postdest:
0x520: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x528:                      | .align 8
                            | # Run time stack
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
                            | 
0x5a8:                      | Stack:
