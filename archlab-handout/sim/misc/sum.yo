                            | # Initial code
0x000: 30f40001000000000000 | 	irmovq Stack,%rsp
0x00a: 30f72000000000000000 | 	irmovq ele1, %rdi
0x014: 805000000000000000   | 	call sum_list
0x01d: 00                   | 	halt
                            | 
                            | # Sample linked list
0x020:                      | .align 8
0x020:                      | ele1:
0x020: 0a00000000000000     | 	.quad 0x00a
0x028: 3000000000000000     | 	.quad ele2
0x030:                      | ele2:
0x030: b000000000000000     | 	.quad 0x0b0
0x038: 4000000000000000     | 	.quad ele3
0x040:                      | ele3:
0x040: 000c000000000000     | 	.quad 0xc00
0x048: 0000000000000000     | 	.quad 0
                            | 
                            | # long sum_list(list_ptr ls)
                            | # ls in %rdi
0x050:                      | sum_list:
0x050: 6300                 | 	xorq %rax,%rax          # val = 0
0x052: 6277                 | 	andq %rdi,%rdi			# ls == 0?
0x054: 738200000000000000   | 	je done					# Yes, goto done
0x05d:                      | loop:
                            | 	# FILL IN HERE
0x05d: a03f                 | 	pushq %rbx
0x05f: 50370000000000000000 | 	mrmovq (%rdi),%rbx
0x069: 6030                 | 	addq %rbx,%rax
0x06b: b03f                 | 	popq %rbx
0x06d: 50770800000000000000 | 	mrmovq 8(%rdi),%rdi
0x077: 6277                 | 	andq %rdi,%rdi
0x079: 745d00000000000000   | 	jne loop	        # If null, goto done
0x082: 90                   | done:	ret				# return
                            | 
0x100:                      | .pos 0x100
0x100:                      | Stack:
